// DFS traversals (using recursion) - inorder, preorder, postorder
#include <bits/stdc++.h>
using namespace std;
struct node
{
    int data;
    struct node *left;
    struct node *right;
    node(int val)
    {
        data = val;
        left = right = NULL;
    }
};

// Inorder
void bfs(node *root)
{
    if (root == NULL)
    {
        return;
    }
    bfs(root->left);
    cout << root->data << " ";
    bfs(root->right);
}

// preorder
void bfs(node *root)
{
    if (root == NULL)
    {
        return;
    }
    cout << root->data << " ";
    bfs(root->left);
    bfs(root->right);
}

// postordere
void bfs(node *root)
{
    if (root == NULL)
    {
        return;
    }
    bfs(root->left);
    bfs(root->right);
    cout << root->data << " ";
}

int main()
{

    struct node *root = new node(1);
    root->left = new node(2);
    root->right = new node(5);
    root->right = new node(3);
    bfs(root);

    return 0;
}
